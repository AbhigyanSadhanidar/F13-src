<template>
<div>
  <p v-if="$fetchState.pending">Fetching data...</p>
  <p v-else-if="$fetchState.error">An error occurred :(</p>

  <v-card v-else v-on:scroll.native="handleScroll">
    <v-row justify="center" align="center">

      <v-col cols="12" sm="12" md="12">
        <div class="text-center">
          <simple-master />
        </div>

      </v-col>

      <v-col cols="12" sm="12" md="8" >
        <v-container>
          <v-row justify="center" align="center">
            <v-col cols="12" sm="12" md="12">

              <counter-upcoming />

            </v-col>

            <v-col cols="12" sm="12" md="12">
              <master-gallery />

            </v-col>

            <v-col cols="12" sm="12" md="12">
                <social-section />
            </v-col>

          </v-row>

          <v-row>

          </v-row>
        </v-container>
      </v-col>
    </v-row>
  </v-card>




</div>
</template>

<script>
import Logo from '~/components/Logo.vue'
import VuetifyLogo from '~/components/VuetifyLogo.vue'
import LetterSlider from '../components/LetterSlider.vue'
import MasterAboutUs from '../components/MasterAboutUs.vue'
import MasterSlider from '../components/MasterSlider.vue'
export default {
  head: {
    titleTemplate: 'Social Responsibility Council - SrCouncil',
    meta: [{
        charset: 'utf-8'
      },
      {
        name: 'viewport',
        content: 'width=device-width, initial-scale=1'
      },

      // hid is used as unique identifier. Do not use `vmid` for it as it will not work
      {
        hid: 'description',
        name: 'description',
        content: 'Meta description'
      }
    ]
  },
  fetchOnServer: true,
  activated() {
    // Call fetch again if last fetch more than 30 sec ago
    if (this.$fetchState.timestamp <= (Date.now() - 30000)) {
      this.$fetch()
    }
  },
  async fetch() {
    // this.posts = await fetch(`http://127.0.0.1:8000/home/dashboard/`)
    //   .then((res) => res.json())

    this.posts = await fetch(`https://api.srcouncil.in/home/dashboard/`,{'headers':{"X-API-KEY":"T0uf0wOD.FNxBVbSAFWx8z5TY6NaU38J36OzEobeJ"}})
      .then((res) => res.json())

    //console.log(this.posts)
    this.$store.commit("main/SET_HOME_DATA", this.posts)

  },
  data() {
    return {
      show: true,
      posts: {},
      scrollInvoked: 0,
      offsetTop: 0
    }
  },
  components: {
    Logo,
    VuetifyLogo,
    MasterAboutUs,
    MasterSlider,
    LetterSlider
  },
  beforeMount () {
    window.addEventListener('scroll', this.handleScroll);
  },

  methods: {
    onScroll(e) {
      this.offsetTop = e.target.scrollTop
      if(this.offsetTop > 400){
        this.$store.commit("main/SET_APPBAR_COLOR","orange")
      }else{
        this.$store.commit("main/SET_APPBAR_COLOR","transparent")
      }
      console.log("load")
    },
    onScrollss() {
      this.scrollInvoked++
      console.log("Hello")
    },
    handleScroll(event) {
      // Any code to be executed when the window is scrolled
      if(window.scrollY > 400){
        this.$store.commit("main/SET_APPBAR_COLOR","orange")
      }else{
        this.$store.commit("main/SET_APPBAR_COLOR","orange")
      }
      console.log(window.scrollY);
    }
  }
}
</script>
